<?php
// $Id$

function admin_menu_help($section) {
  switch ($section) {
    case 'admin/modules#description':
      return t("Renders the administer menu tree as dropdown menu at the top of the window.");
  }
}

/**
 * Implementation of hook_block().
 */
function admin_menu_block($op = 'list', $delta = 0) {
  $block = array();
  switch ($op) {
    case 'list':
      $block[0]['info'] = t('Admin Menu Block');
      $block[0]['status'] = 1;
      $block[0]['region'] = 'header';
      return $block;

    case 'view':
      if (!user_access('access administration pages')) {
        return;
      }
      
      $css_file = drupal_get_path('module', 'admin_menu') . '/admin_menu.css';
      if (function_exists('theme_add_style')) {
        theme_add_style($css_file, 'all');
      }
      else {
        drupal_add_css($css_file, 'module', 'all');
      }
      /* IE fix using IE7 JavaScript from http://dean.edwards.name/IE7/
      // You need to alter any instance of "position: fixed;" to "position: absolute;"
      // in admin_menu.css additionally.
      $ie_header = "<!--[if lt IE 7]>\n";
      $ie_header.= '<script type="text/javascript" src="'. check_url(base_path() . 'modules/admin_menu/ie7/ie7-standard-p.js') .'"></script>';
      $ie_header.= "\n<![endif]-->";
      drupal_set_html_head($ie_header);
      */
      $block['content'] = '<div id="admin_menu">';
      $block['content'].= theme('admin_menu_icon');
      $block['content'].= admin_menu_get_menu();
      $block['content'].= '</div>';
      return $block;
  }
}

/**
 * Retrieves, sclices and returns the menu tree below /admin.
 */
function admin_menu_get_menu() {
  global $_menu;
  $admin_items = array();

  // get path id of /q=admin, which we suppose to be the root of admin menu
  $pid_admin = $_menu['path index']['admin'];
  $admin_items[$pid_admin] = $_menu['items'][$pid_admin];
  
  // slice admin menu items into a new menu tree
  _admin_menu_get_children($admin_items, $admin_items[$pid_admin]);
  
  // adjust some specific menu items for better user experience
  admin_menu_adjust_items($admin_items);
  
  // remove administer menu item from parent's children list
  $parent_id = $_menu['items'][$pid_admin]['pid'];
  $child_key = array_search($pid_admin, $_menu['visible'][$parent_id]['children']);
  unset( $_menu['visible'][$parent_id]['children'][$child_key] );
  
  return theme('admin_menu_tree', $admin_items, $pid_admin);
}

function _admin_menu_get_children(&$admin_items, &$item) {
  global $_menu;
  
  if (isset( $item['children'] )) {
    foreach ($item['children'] as $child) {
      $is_visible_item = $_menu['items'][$child]['type'] & (MENU_VISIBLE_IN_TREE | MENU_IS_LOCAL_TASK);

      // create the child item if it's visible in navigation
      // Hide items linking to parent: && !($_menu['items'][$child]['type'] & MENU_LINKS_TO_PARENT) 12/01/2007 sun
      if ($is_visible_item) {
        $admin_items[$child] = $_menu['items'][$child];

        // recurse to child menu items
        if (isset( $_menu['items'][$child]['children'] )) {
          _admin_menu_get_children($admin_items, $admin_items[$child]);
        }

        // remove this child item if it's visible in navigation
        unset( $_menu['visible'][$child] );
      }
      else {
        // remove child menu item from parent's children list
        $parent_id = $_menu['items'][$child]['pid'];
        $child_key = array_search($child, $_menu['items'][$parent_id]['children']);
        if ($child_key !== FALSE) {
          unset( $admin_items[$parent_id]['children'][$child_key] );
        }
      }
    }

    // sort remaining items
    usort($item['children'], '_menu_sort');
  }
}

function admin_menu_adjust_items(&$admin_items) {
  global $_menu;
  
  // move 'By module' into Site configuration
  if (isset( $admin_items[-102] ) && $admin_items[-102]['path'] == 'admin/by-module') {
    // remove child pointer from original location
    $parent_id = $admin_items[-102]['pid'];
    $child_key = array_search(-102, $admin_items[$parent_id]['children']);
    if ($child_key !== FALSE) {
      unset( $admin_items[$parent_id]['children'][$child_key] );
    }
    // insert new child pointers
    $pid_settings = $_menu['path index']['admin/settings'];
    $admin_items[-102]['pid'] = $pid_settings;
    array_unshift( $admin_items[$pid_settings]['children'], -102);
  }
  
  // remove 'By task' menu item
  if (isset( $admin_items[-101] ) && $admin_items[-101]['path'] == 'admin/by-task') {
    // remove child pointer
    $parent_id = $admin_items[-101]['pid'];
    $child_key = array_search(-101, $admin_items[$parent_id]['children']);
    if ($child_key !== FALSE) {
      unset( $admin_items[$parent_id]['children'][$child_key] );
    }
  }
}

/**
 * Generate the HTML for a menu tree.
 *
 * @param $pid
 *   The parent id of the menu.
 *
 * @ingroup themeable
 */
function theme_admin_menu_tree(&$menu, $pid = 1) {
  $output = '';
  
  if (isset($menu[$pid]) && $menu[$pid]['children']) {
    foreach ($menu[$pid]['children'] as $mid) {
      $type = isset($menu[$mid]['type']) ? $menu[$mid]['type'] : NULL;
      $children = isset($menu[$mid]['children']) ? $menu[$mid]['children'] : NULL;
      $output .= theme('admin_menu_item', $mid, theme('admin_menu_tree', $menu, $mid), count($children) == 0);
    }
  }
  return $output ? "<ul>" . $output . "</ul>" : '';
}

function theme_admin_menu_item($mid, $children = '', $leaf = TRUE) {
  $item = menu_get_item($mid);
  $output = '<li' . (!$leaf ? ' class="expandable"' : '') . '>';
  $output.= menu_item_link($mid) . $children . "</li>";
  return $output;
}

function theme_admin_menu_icon() {
  $output = '<img id="admin_menu_icon" src="' . check_url(base_path() . 'misc/favicon.ico') . '" alt="" border="0" />';
  return $output;
}
